name: Node.js CI CD

on:
  push:
    branches: ['88-dars']
  pull_request:
    branches: ['88-dars']

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install -g pnpm
      - run: pnpm install
      - run: npm test

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.USER }}@${{ secrets.HOST }} <<'ENDSSH'
          set -e
          echo "Navigating to application directory..."
          cd ${{ secrets.APP_PATH }} || { echo "Directory not found!"; exit 1; }

          echo "Pulling latest changes..."
          git pull || { echo "Git pull failed!"; exit 1; }

          echo "Installing dependencies..."
          npm install pnpm -g || { echo "Failed to install pnpm!"; exit 1; }
          pnpm install || { echo "Dependency installation failed!"; exit 1; }
          npm run build || { echo "Build failed!"; exit 1; }

          echo "Restarting Docker services..."
          docker compose down || { echo "Failed to stop Docker services!"; exit 1; }
          docker compose up -d || { echo "Failed to start Docker services!"; exit 1; }

          echo "Restarting application with PM2..."
          npx pm2 restart ${{ secrets.APP_NAME }} || { echo "PM2 restart failed!"; exit 1; }
          ENDSSH
